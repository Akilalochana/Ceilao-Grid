name: Build and Deploy Android App 

on: 
  push: 
    branches: [ main ] 
  workflow_dispatch: 

jobs: 
  build: 
    runs-on: ubuntu-latest 
    steps: 
      - name: Checkout code 
        uses: actions/checkout@v3 
        with: 
          fetch-depth: 0 
          
      - name: Check directory structure 
        run: | 
          echo "Current directory: $(pwd)" 
          ls -la 
          echo "Looking for gradlew:" 
          find . -name "gradlew" 
          echo "Checking project structure:"
          find . -type f -name "*.gradle" -o -name "*.gradle.kts" | sort
          
      - name: Set up JDK 17 
        uses: actions/setup-java@v3 
        with: 
          java-version: '17' 
          distribution: 'temurin' 
          cache: gradle 
          
      - name: Setup Android SDK 
        uses: android-actions/setup-android@v2 
        
      - name: Grant execute permission for gradlew 
        run: | 
          find . -name "gradlew" -exec chmod +x {} \; 
          
      - name: Display Gradle and Project Info
        run: |
          APP_DIR=$(find . -name "gradlew" | sed 's|/gradlew||' | head -n 1)
          cd $APP_DIR
          echo "==== Gradle Info ===="
          ./gradlew --version
          echo "==== Gradle Files ===="
          if [ -f "gradle/wrapper/gradle-wrapper.properties" ]; then
            cat gradle/wrapper/gradle-wrapper.properties
          fi
          echo "==== Memory Info ===="
          free -h
          
      - name: Configure Gradle memory settings
        run: |
          APP_DIR=$(find . -name "gradlew" | sed 's|/gradlew||' | head -n 1)
          cd $APP_DIR
          mkdir -p gradle
          echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError" > gradle.properties
          echo "org.gradle.parallel=true" >> gradle.properties
          echo "org.gradle.caching=true" >> gradle.properties
          echo "android.enableJetifier=false" >> gradle.properties
          
      - name: Fix compileSdk issues
        run: |
          find . -name "build.gradle*" -print -exec cat {} \; 
          find . -name "build.gradle*" -exec sed -i 's/compileSdk[ ]*=[ ]*35/compileSdk = 34/g' {} \;
          find . -name "build.gradle*" -exec sed -i 's/compileSdkVersion[ ]*35/compileSdkVersion 34/g' {} \;
          
      - name: Update dependencies if needed
        run: |
          find . -name "build.gradle*" -exec sed -i 's/com.android.tools.build:gradle:[0-9]\+\.[0-9]\+\.[0-9]\+/com.android.tools.build:gradle:8.1.0/g' {} \;
          
      - name: Clean project with debug output
        run: | 
          APP_DIR=$(find . -name "gradlew" | sed 's|/gradlew||' | head -n 1)
          cd $APP_DIR
          ./gradlew clean --info
          
      - name: Build debug APK with full logging
        run: | 
          APP_DIR=$(find . -name "gradlew" | sed 's|/gradlew||' | head -n 1)
          cd $APP_DIR
          ./gradlew assembleDebug --stacktrace --info --scan > build_log.txt 2>&1 || (cat build_log.txt && exit 1)
          
      - name: Upload build logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            **/build_log.txt
            **/build/reports/**
          retention-days: 7
          
      - name: Upload debug APK 
        if: success() 
        uses: actions/upload-artifact@v4 
        with: 
          name: app-debug 
          path: | 
            **/build/outputs/apk/debug/*.apk 
          retention-days: 7
